@model IEnumerable<CertApp.ViewModel.CertView>

@{
    ViewBag.Title = "Cert List";
    WebGrid grid = new WebGrid(source: Model, canSort: false);
}

<script src="Scripts/jquery-1.12.4.js"
        type="text/javascript"></script>

<style>
    
        th, td {
            padding: 10px;
        }

        td:nth-child(n+7) {
            background-color: #f3f3f3;
            padding: 5px;
        }

        td:not(:first-child), th:not(:first-child) {
         padding: 25px;
    }

    th {
        background-color: rgb(248, 248, 248);
    }

    #gridT, #gridT tr {
        border: 1px solid #f3f3f3;
        border-left: none;
        border-right: none;
        border-bottom: none;
        margin: 60px 0px 0px 10px; 
    }

    #subT, #subT tr {
        border: 1px solid #f3f3f3;
        
    }

        #subT td:nth-child(n+5) {
            background-color: rgb(248, 248, 248);
        }

    #subT {
        margin: 5px 0px 0px 10px;
        padding: 5px;
        width: 95%;
    }

        #subT th {
            font-size: 15px;
         background-color: rgb(248, 248, 248);
        }

    a {
        color: black;
    }

    .hoverEff {
        cursor: pointer;
    }

        .hoverEff:hover {
            background-color: rgb(248, 242, 242);
        }

    .expand {
        background-image: url(/Images/pm.png);
        background-position-x: -22px;
        background-repeat: no-repeat;
    }

    .collapses {
        background-image: url(/Images/pm.png);
        background-position-x: -2px;
        background-repeat: no-repeat;
    }

    .col-xs-10 {
        margin-top: 2%;
        
        margin-left: 2%;
    }

    .col-xs-3 {
        margin-left: 2%;
        
    }

</style>

@using (Html.BeginForm())
{
    <div class="col-xs-10">
        @Html.ActionLink("Add New Cert", "Create", "Certs", null, null)
    </div>

    <div class="col-xs-3">
        @Html.DropDownList("searchColumn", new List<SelectListItem>
    {
        new SelectListItem { Text = "Applicant Name", Value = "ApplicantName" },
        new SelectListItem { Text = "Inspection Date",  Value = "InspectionDate" },
        new SelectListItem { Text = "Applicant Email",  Value = "ApplicantEmail" },
    }, new { @class = "form-control" })
    </div>

        <div class="col-xs-4">

            @Html.TextBox("searchString", null, new { @class = "form-control", @placeholder = "search word" })
        </div>
        <div class="col-xs-4">
            <input type="submit" value="Search" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse" />
        </div>


<div id="main" style="padding:25px; background-color:white;">
    @grid.GetHtml(
    htmlAttributes: new { id = "gridT", width = "900px" },

    columns: grid.Columns(
            grid.Column("cert.ApplicantName", "ApplicantName"),
            grid.Column("cert.CertNum", "CertNum"),
            grid.Column("cert.SupersededCertNum", "SupersededCertNum"),
            grid.Column("cert.PreviousCertNum", "PreviousCertNum"),

            grid.Column("cert.InspectionDate", "InspectionDate", format: (item) => string.Format("{0:yyyy-MM-dd}", item.cert.InspectionDate)),
            grid.Column(header: "", format: (item) =>
            {
                var link = Html.ActionLink("Add CertRow", "CreateByID", "CertRows", new { id = item.cert.ID }, null);
                return link;
            }),
            grid.Column(header: "", format: (item) =>
            {
                var link = Html.ActionLink("Edit", "Edit", "Certs", new { id = item.cert.ID }, null);
                return link;
            }),
            grid.Column(header: "", format: (item) =>
            {
                var link = Html.ActionLink("Delete", "Delete", "Certs", new { id = item.cert.ID }, null);
                return link;
            }),
            grid.Column(format: (item) =>
            {
            WebGrid subGrid = new WebGrid(source: item.certRows);
            return subGrid.GetHtml(
                htmlAttributes: new { id = "subT" },
                columns: subGrid.Columns(
                        subGrid.Column("CertID", "CertID"),
                        subGrid.Column("CustomsEntryNum", "CustomsEntryNum"),
                        subGrid.Column("TotalWeight", "TotalWeight"),
                        subGrid.Column("HTSCodeDescript", "HTSCodeDescript"),
                        
                        subGrid.Column(header: "", format: (certRows) =>
                        {
                            var link = Html.ActionLink("Edit", "Edit", "Certs", new { id = certRows.ID }, null);
                            return link;
                        }),
                        subGrid.Column(header: "", format: (certRows) =>
                        {
                            var link = Html.ActionLink("Delete", "Delete", "CertRows", new { id = certRows.ID }, null);
                            return link;
                        })));
                        
                })
        )
    )
</div>
}

@* Here I will add some jquery code for make this nested grid collapsible *@

@section Scripts{
<script src="/Scripts/jquery-1.12.4.js"></script>
<script src="/Scripts/bootstrap.js"></script>
<script src="/Scripts/respond.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script type="text/javascript">
        $(document).ready(function () {
            var size = $("#main #gridT > thead > tr >th").size(); // get total column
            $("#main #gridT > thead > tr >th").last().remove(); // remove last column
            $("#main #gridT > thead > tr").prepend("<th></th>"); // add one column at first for collapsible column
            $("#main #gridT > tbody > tr").each(function (i, el) {
                $(this).prepend(
                        $("<td></td>")
                        .addClass("expand")
                        .addClass("hoverEff")
                        .attr('title',"click for show/hide")
                    );

                //Now get sub table from last column and add this to the next new added row
                var table = $("table", this).parent().html();
                //add new row with this subtable
                $(this).after("<tr><td></td><td style='padding:5px; margin:0px;' colspan='" + (size - 1) + "'>" + table + "</td></tr>");
                $("table", this).parent().remove();
                // ADD CLICK EVENT FOR MAKE COLLAPSIBLE
                $(".hoverEff", this).on("click", function () {
                    $(this).parent().closest("tr").next().slideToggle(100);
                    $(this).toggleClass("expand collapses");
                });
            });

            //by default make all subgrid in collapse mode
            $("#main #gridT > tbody > tr td.expand").each(function (i, el) {
                $(this).toggleClass("expand collapses");
                $(this).parent().closest("tr").next().slideToggle(100);
            });

        });
</script>
}